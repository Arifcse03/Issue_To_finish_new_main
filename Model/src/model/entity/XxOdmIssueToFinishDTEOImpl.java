package model.entity;

import oracle.jbo.AttributeList;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.RowID;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 25 11:00:58 BDT 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxOdmIssueToFinishDTEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        LineId {
            public Object get(XxOdmIssueToFinishDTEOImpl obj) {
                return obj.getLineId();
            }

            public void put(XxOdmIssueToFinishDTEOImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        SizeDetail {
            public Object get(XxOdmIssueToFinishDTEOImpl obj) {
                return obj.getSizeDetail();
            }

            public void put(XxOdmIssueToFinishDTEOImpl obj, Object value) {
                obj.setSizeDetail((Number)value);
            }
        }
        ,
        Inseam {
            public Object get(XxOdmIssueToFinishDTEOImpl obj) {
                return obj.getInseam();
            }

            public void put(XxOdmIssueToFinishDTEOImpl obj, Object value) {
                obj.setInseam((String)value);
            }
        }
        ,
        SizeInseam {
            public Object get(XxOdmIssueToFinishDTEOImpl obj) {
                return obj.getSizeInseam();
            }

            public void put(XxOdmIssueToFinishDTEOImpl obj, Object value) {
                obj.setSizeInseam((String)value);
            }
        }
        ,
        Quantity {
            public Object get(XxOdmIssueToFinishDTEOImpl obj) {
                return obj.getQuantity();
            }

            public void put(XxOdmIssueToFinishDTEOImpl obj, Object value) {
                obj.setQuantity((Number)value);
            }
        }
        ,
        Attribute1 {
            public Object get(XxOdmIssueToFinishDTEOImpl obj) {
                return obj.getAttribute1();
            }

            public void put(XxOdmIssueToFinishDTEOImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(XxOdmIssueToFinishDTEOImpl obj) {
                return obj.getAttribute2();
            }

            public void put(XxOdmIssueToFinishDTEOImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(XxOdmIssueToFinishDTEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(XxOdmIssueToFinishDTEOImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(XxOdmIssueToFinishDTEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(XxOdmIssueToFinishDTEOImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(XxOdmIssueToFinishDTEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(XxOdmIssueToFinishDTEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(XxOdmIssueToFinishDTEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(XxOdmIssueToFinishDTEOImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        OrgId {
            public Object get(XxOdmIssueToFinishDTEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(XxOdmIssueToFinishDTEOImpl obj, Object value) {
                obj.setOrgId((Number)value);
            }
        }
        ,
        RowID {
            public Object get(XxOdmIssueToFinishDTEOImpl obj) {
                return obj.getRowID();
            }

            public void put(XxOdmIssueToFinishDTEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        XxOdmIssueToFinishLTEO {
            public Object get(XxOdmIssueToFinishDTEOImpl obj) {
                return obj.getXxOdmIssueToFinishLTEO();
            }

            public void put(XxOdmIssueToFinishDTEOImpl obj, Object value) {
                obj.setXxOdmIssueToFinishLTEO((EntityImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(XxOdmIssueToFinishDTEOImpl object);

        public abstract void put(XxOdmIssueToFinishDTEOImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int SIZEDETAIL = AttributesEnum.SizeDetail.index();
    public static final int INSEAM = AttributesEnum.Inseam.index();
    public static final int SIZEINSEAM = AttributesEnum.SizeInseam.index();
    public static final int QUANTITY = AttributesEnum.Quantity.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int ROWID = AttributesEnum.RowID.index();
    public static final int XXODMISSUETOFINISHLTEO = AttributesEnum.XxOdmIssueToFinishLTEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxOdmIssueToFinishDTEOImpl() {
    }

    /**
     * Gets the attribute value for LineId, using the alias name LineId.
     * @return the LineId
     */
    public Number getLineId() {
        return (Number)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineId.
     * @param value value to set the LineId
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for SizeDetail, using the alias name SizeDetail.
     * @return the SizeDetail
     */
    public Number getSizeDetail() {
        return (Number)getAttributeInternal(SIZEDETAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for SizeDetail.
     * @param value value to set the SizeDetail
     */
    public void setSizeDetail(Number value) {
        setAttributeInternal(SIZEDETAIL, value);
    }

    /**
     * Gets the attribute value for Inseam, using the alias name Inseam.
     * @return the Inseam
     */
    public String getInseam() {
        return (String)getAttributeInternal(INSEAM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Inseam.
     * @param value value to set the Inseam
     */
    public void setInseam(String value) {
        setAttributeInternal(INSEAM, value);
    }

    /**
     * Gets the attribute value for SizeInseam, using the alias name SizeInseam.
     * @return the SizeInseam
     */
    public String getSizeInseam() {
        return (String)getAttributeInternal(SIZEINSEAM);
    }

    /**
     * Sets <code>value</code> as the attribute value for SizeInseam.
     * @param value value to set the SizeInseam
     */
    public void setSizeInseam(String value) {
        setAttributeInternal(SIZEINSEAM, value);
    }

    /**
     * Gets the attribute value for Quantity, using the alias name Quantity.
     * @return the Quantity
     */
    public Number getQuantity() {
        return (Number)getAttributeInternal(QUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Quantity.
     * @param value value to set the Quantity
     */
    public void setQuantity(Number value) {
        setAttributeInternal(QUANTITY, value);
    }

    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for Attribute2, using the alias name Attribute2.
     * @return the Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute2.
     * @param value value to set the Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the OrgId
     */
    public Number getOrgId() {
        return (Number)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(Number value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for RowID, using the alias name RowID.
     * @return the RowID
     */
    public RowID getRowID() {
        return (RowID)getAttributeInternal(ROWID);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getXxOdmIssueToFinishLTEO() {
        return (EntityImpl)getAttributeInternal(XXODMISSUETOFINISHLTEO);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setXxOdmIssueToFinishLTEO(EntityImpl value) {
        setAttributeInternal(XXODMISSUETOFINISHLTEO, value);
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.entity.XxOdmIssueToFinishDTEO");
        }
        return mDefinitionObject;
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("XX_ODM_ISSUE_TO_FINISH_L_S",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setSizeDetail(sVal);
    }

    /**
     * Add locking logic here.
     */
   

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
