package model.entity;

import java.sql.SQLException;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 25 11:13:52 BDT 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxOdmIssueToFinishLTEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        HeaderId {
            public Object get(XxOdmIssueToFinishLTEOImpl obj) {
                return obj.getHeaderId();
            }

            public void put(XxOdmIssueToFinishLTEOImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        LineId {
            public Object get(XxOdmIssueToFinishLTEOImpl obj) {
                return obj.getLineId();
            }

            public void put(XxOdmIssueToFinishLTEOImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        Quantity {
            public Object get(XxOdmIssueToFinishLTEOImpl obj) {
                return obj.getQuantity();
            }

            public void put(XxOdmIssueToFinishLTEOImpl obj, Object value) {
                obj.setQuantity((Number)value);
            }
        }
        ,
        CutDate {
            public Object get(XxOdmIssueToFinishLTEOImpl obj) {
                return obj.getCutDate();
            }

            public void put(XxOdmIssueToFinishLTEOImpl obj, Object value) {
                obj.setCutDate((Date)value);
            }
        }
        ,
        StitchPrepDate {
            public Object get(XxOdmIssueToFinishLTEOImpl obj) {
                return obj.getStitchPrepDate();
            }

            public void put(XxOdmIssueToFinishLTEOImpl obj, Object value) {
                obj.setStitchPrepDate((Date)value);
            }
        }
        ,
        WashingPlant {
            public Object get(XxOdmIssueToFinishLTEOImpl obj) {
                return obj.getWashingPlant();
            }

            public void put(XxOdmIssueToFinishLTEOImpl obj, Object value) {
                obj.setWashingPlant((String)value);
            }
        }
        ,
        SendWashDate {
            public Object get(XxOdmIssueToFinishLTEOImpl obj) {
                return obj.getSendWashDate();
            }

            public void put(XxOdmIssueToFinishLTEOImpl obj, Object value) {
                obj.setSendWashDate((Date)value);
            }
        }
        ,
        SendBy {
            public Object get(XxOdmIssueToFinishLTEOImpl obj) {
                return obj.getSendBy();
            }

            public void put(XxOdmIssueToFinishLTEOImpl obj, Object value) {
                obj.setSendBy((String)value);
            }
        }
        ,
        CarriedBy {
            public Object get(XxOdmIssueToFinishLTEOImpl obj) {
                return obj.getCarriedBy();
            }

            public void put(XxOdmIssueToFinishLTEOImpl obj, Object value) {
                obj.setCarriedBy((String)value);
            }
        }
        ,
        DelChallanNo {
            public Object get(XxOdmIssueToFinishLTEOImpl obj) {
                return obj.getDelChallanNo();
            }

            public void put(XxOdmIssueToFinishLTEOImpl obj, Object value) {
                obj.setDelChallanNo((String)value);
            }
        }
        ,
        Remarks {
            public Object get(XxOdmIssueToFinishLTEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(XxOdmIssueToFinishLTEOImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(XxOdmIssueToFinishLTEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(XxOdmIssueToFinishLTEOImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(XxOdmIssueToFinishLTEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(XxOdmIssueToFinishLTEOImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(XxOdmIssueToFinishLTEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(XxOdmIssueToFinishLTEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(XxOdmIssueToFinishLTEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(XxOdmIssueToFinishLTEOImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        OrgId {
            public Object get(XxOdmIssueToFinishLTEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(XxOdmIssueToFinishLTEOImpl obj, Object value) {
                obj.setOrgId((Number)value);
            }
        }
        ,
        ChallanNo {
            public Object get(XxOdmIssueToFinishLTEOImpl obj) {
                return obj.getChallanNo();
            }

            public void put(XxOdmIssueToFinishLTEOImpl obj, Object value) {
                obj.setChallanNo((Number)value);
            }
        }
        ,
        SystemId {
            public Object get(XxOdmIssueToFinishLTEOImpl obj) {
                return obj.getSystemId();
            }

            public void put(XxOdmIssueToFinishLTEOImpl obj, Object value) {
                obj.setSystemId((Number)value);
            }
        }
        ,
        XxOdmIssueToFinishDTEO {
            public Object get(XxOdmIssueToFinishLTEOImpl obj) {
                return obj.getXxOdmIssueToFinishDTEO();
            }

            public void put(XxOdmIssueToFinishLTEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        XxOdmIssueToFinishHTEO {
            public Object get(XxOdmIssueToFinishLTEOImpl obj) {
                return obj.getXxOdmIssueToFinishHTEO();
            }

            public void put(XxOdmIssueToFinishLTEOImpl obj, Object value) {
                obj.setXxOdmIssueToFinishHTEO((XxOdmIssueToFinishHTEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(XxOdmIssueToFinishLTEOImpl object);

        public abstract void put(XxOdmIssueToFinishLTEOImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int QUANTITY = AttributesEnum.Quantity.index();
    public static final int CUTDATE = AttributesEnum.CutDate.index();
    public static final int STITCHPREPDATE = AttributesEnum.StitchPrepDate.index();
    public static final int WASHINGPLANT = AttributesEnum.WashingPlant.index();
    public static final int SENDWASHDATE = AttributesEnum.SendWashDate.index();
    public static final int SENDBY = AttributesEnum.SendBy.index();
    public static final int CARRIEDBY = AttributesEnum.CarriedBy.index();
    public static final int DELCHALLANNO = AttributesEnum.DelChallanNo.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int CHALLANNO = AttributesEnum.ChallanNo.index();
    public static final int SYSTEMID = AttributesEnum.SystemId.index();
    public static final int XXODMISSUETOFINISHDTEO = AttributesEnum.XxOdmIssueToFinishDTEO.index();
    public static final int XXODMISSUETOFINISHHTEO = AttributesEnum.XxOdmIssueToFinishHTEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxOdmIssueToFinishLTEOImpl() {
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for LineId, using the alias name LineId.
     * @return the LineId
     */
    public Number getLineId() {
        return (Number)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineId.
     * @param value value to set the LineId
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for Quantity, using the alias name Quantity.
     * @return the Quantity
     */
    public Number getQuantity() {
        return (Number)getAttributeInternal(QUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Quantity.
     * @param value value to set the Quantity
     */
    public void setQuantity(Number value) {
        setAttributeInternal(QUANTITY, value);
    }

    /**
     * Gets the attribute value for CutDate, using the alias name CutDate.
     * @return the CutDate
     */
    public Date getCutDate() {
        return (Date)getAttributeInternal(CUTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CutDate.
     * @param value value to set the CutDate
     */
    public void setCutDate(Date value) {
        setAttributeInternal(CUTDATE, value);
    }

    /**
     * Gets the attribute value for StitchPrepDate, using the alias name StitchPrepDate.
     * @return the StitchPrepDate
     */
    public Date getStitchPrepDate() {
        return (Date)getAttributeInternal(STITCHPREPDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StitchPrepDate.
     * @param value value to set the StitchPrepDate
     */
    public void setStitchPrepDate(Date value) {
        setAttributeInternal(STITCHPREPDATE, value);
    }

    /**
     * Gets the attribute value for WashingPlant, using the alias name WashingPlant.
     * @return the WashingPlant
     */
    public String getWashingPlant() {
        return (String)getAttributeInternal(WASHINGPLANT);
    }

    /**
     * Sets <code>value</code> as the attribute value for WashingPlant.
     * @param value value to set the WashingPlant
     */
    public void setWashingPlant(String value) {
        setAttributeInternal(WASHINGPLANT, value);
    }

    /**
     * Gets the attribute value for SendWashDate, using the alias name SendWashDate.
     * @return the SendWashDate
     */
    public Date getSendWashDate() {
        return (Date)getAttributeInternal(SENDWASHDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SendWashDate.
     * @param value value to set the SendWashDate
     */
    public void setSendWashDate(Date value) {
        setAttributeInternal(SENDWASHDATE, value);
    }

    /**
     * Gets the attribute value for SendBy, using the alias name SendBy.
     * @return the SendBy
     */
    public String getSendBy() {
        return (String)getAttributeInternal(SENDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for SendBy.
     * @param value value to set the SendBy
     */
    public void setSendBy(String value) {
        setAttributeInternal(SENDBY, value);
    }

    /**
     * Gets the attribute value for CarriedBy, using the alias name CarriedBy.
     * @return the CarriedBy
     */
    public String getCarriedBy() {
        return (String)getAttributeInternal(CARRIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CarriedBy.
     * @param value value to set the CarriedBy
     */
    public void setCarriedBy(String value) {
        setAttributeInternal(CARRIEDBY, value);
    }

    /**
     * Gets the attribute value for DelChallanNo, using the alias name DelChallanNo.
     * @return the DelChallanNo
     */
    public String getDelChallanNo() {
        return (String)getAttributeInternal(DELCHALLANNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for DelChallanNo.
     * @param value value to set the DelChallanNo
     */
    public void setDelChallanNo(String value) {
        setAttributeInternal(DELCHALLANNO, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the OrgId
     */
    public Number getOrgId() {
        return (Number)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(Number value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for ChallanNo, using the alias name ChallanNo.
     * @return the ChallanNo
     */
    public Number getChallanNo() {
        return (Number)getAttributeInternal(CHALLANNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChallanNo.
     * @param value value to set the ChallanNo
     */
    public void setChallanNo(Number value) {
        setAttributeInternal(CHALLANNO, value);
    }

    /**
     * Gets the attribute value for SystemId, using the alias name SystemId.
     * @return the SystemId
     */
    public Number getSystemId() {
        return (Number)getAttributeInternal(SYSTEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SystemId.
     * @param value value to set the SystemId
     */
    public void setSystemId(Number value) {
        setAttributeInternal(SYSTEMID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxOdmIssueToFinishDTEO() {
        return (RowIterator)getAttributeInternal(XXODMISSUETOFINISHDTEO);
    }

    /**
     * @return the associated entity XxOdmIssueToFinishHTEOImpl.
     */
    public XxOdmIssueToFinishHTEOImpl getXxOdmIssueToFinishHTEO() {
        return (XxOdmIssueToFinishHTEOImpl)getAttributeInternal(XXODMISSUETOFINISHHTEO);
    }

    /**
     * Sets <code>value</code> as the associated entity XxOdmIssueToFinishHTEOImpl.
     */
    public void setXxOdmIssueToFinishHTEO(XxOdmIssueToFinishHTEOImpl value) {
        setAttributeInternal(XXODMISSUETOFINISHHTEO, value);
    }

    /**
     * @param lineId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number lineId) {
        return new Key(new Object[]{lineId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.entity.XxOdmIssueToFinishLTEO");
        }
        return mDefinitionObject;
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("XX_ODM_ISSUE_TO_FINISH_L_S",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setLineId(sVal);
       
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
     protected void doDML(int operation, TransactionEvent e) {
         Map sessionScope = ADFContext.getCurrent().getSessionScope();   
         String user = (String)sessionScope.get("userId");
         String orgId  =(String)sessionScope.get("orgId");
         String unitName  =(String)sessionScope.get("unitName");
        
         System.out.println("ASSES INS DO DML 1 ------------------>"+user);
         System.out.println("ASSES INS DO DML 2------------------>"+orgId);
         System.out.println("ASSES INS DML 3 ------------------>"+unitName);
         
         if(DML_UPDATE == operation){
                   try {
                       setLastUpdateDate((Date)Date.getCurrentDate()); 
                       setLastUpdatedBy(new oracle.jbo.domain.Number(user));
                   } catch (SQLException f) {
                       System.out.println(f.getMessage());
                   }
               }
               else if (DML_INSERT == operation){
                
                   try {
                      
                       setOrgId(new oracle.jbo.domain.Number(orgId));
                      // setAttribute1(unitName);
                       setCreationDate((Date)Date.getCurrentDate());  
                       setCreatedBy(new oracle.jbo.domain.Number(user));
                      
                      
                      
                   } catch (SQLException f) {
                       ;
                   }
               }
         
         super.doDML(operation, e);
     }
}
